#BlueJ class context
comment0.target=TestUtils
comment1.params=preis
comment1.target=void\ checkPreis(double)
comment1.text=\n\ This\ method\ is\ used\ to\ validate\ that\ the\ price\ is\ non-negative.\n\ @param\ preis\ The\ price\ to\ be\ validated.\n\ @throws\ IllegalArgumentException\ if\ the\ price\ is\ less\ than\ 0\n
comment10.params=lager\ index
comment10.target=void\ checkIfIndexIsNull(Artikel[],\ int)
comment10.text=\n\ This\ method\ is\ used\ to\ check\ if\ the\ index\ is\ null\n\ @param\ lager\ The\ inventory\n\ @param\ index\ The\ index\ to\ be\ checked\n\ @throws\ IllegalArgumentException\ if\ the\ index\ is\ null\n
comment11.params=anzahl\ number\ string
comment11.target=void\ checkGreaterThan(int,\ int,\ java.lang.String)
comment11.text=\n\ This\ method\ checks\ if\ a\ given\ value\ is\ greater\ than\ the\ specified\ minimum\ value.\n\ @param\ value\ The\ value\ to\ be\ checked\n\ @param\ minValue\ The\ minimum\ value\ to\ be\ compared\ against\n\ @param\ valueName\ The\ name\ of\ the\ value\ for\ error\ message\n\ @throws\ IllegalArgumentException\ if\ the\ value\ is\ less\ than\ the\ minimum\ value\n
comment12.params=prozent
comment12.target=void\ checkProzent(double)
comment12.text=\n\ This\ method\ is\ used\ to\ check\ if\ the\ input\ of\ the\ user\ is\ greater\ than\ 100%\n\ @param\ prozent\ The\ input\ of\ the\ user\n\ @throws\ IllegalArgumentException\ if\ the\ input\ is\ greater\ than\ 100\n
comment13.params=jahr
comment13.target=void\ checkJahr(int)
comment13.text=\n\ This\ method\ is\ used\ to\ check\ if\ the\ input\ of\ the\ user\ is\ greater\ than\ 100%\n\ @param\ prozent\ The\ input\ of\ the\ user\n\ @throws\ IllegalArgumentException\ if\ the\ input\ is\ greater\ than\ 100\n
comment14.params=artikelNr1\ artikelNr2
comment14.target=void\ checkIfSame(int,\ int)
comment14.text=\n\ This\ method\ is\ used\ to\ check\ if\ the\ year\ input\ is\ between\ 1900\ and\ current\ year\n\ @param\ jahr\ The\ year\ to\ be\ checked\n\ @throws\ IllegalArgumentException\ if\ the\ year\ is\ not\ between\ 1900\ and\ current\ yearn
comment15.params=artikel1\ artikel2
comment15.target=void\ checkType(Artikel,\ Artikel)
comment15.text=\n\ This\ method\ is\ used\ to\ check\ if\ the\ two\ input\ article\ numbers\ are\ the\ same.\n\ @param\ artikelNr1\ The\ first\ article\ number\ to\ be\ checked\n\ @param\ artikelNr2\ The\ second\ article\ number\ to\ be\ checked\n\ @throws\ IllegalArgumentException\ if\ the\ two\ input\ article\ numbers\ are\ the\ same\n
comment2.params=inputArt
comment2.target=void\ checkIfEmpty(java.lang.String)
comment2.text=\n\ This\ method\ is\ used\ to\ validate\ that\ the\ input\ for\ the\ new\ art\ variable\ is\ not\ empty\ and\ does\ not\ contain\ leading\ or\ trailing\ whitespaces.\n\ @param\ inputArt\ The\ new\ art\ to\ be\ validated\n\ @throws\ IllegalArgumentException\ if\ the\ input\ is\ empty\ or\ contains\ leading\ or\ trailing\ whitespaces\n
comment3.params=inputBestand
comment3.target=void\ checkBestand(int)
comment3.text=\n\ This\ method\ is\ used\ to\ validate\ that\ the\ input\ for\ the\ new\ stock\ variable\ is\ non-negative.\n\ @param\ inputBestand\ The\ new\ stock\ to\ be\ validated\n\ @throws\ IllegalArgumentException\ if\ the\ stock\ is\ less\ than\ 0\n
comment4.params=inputArtikelNr
comment4.target=void\ checkArtikelNr(int)
comment4.text=\n\ This\ method\ is\ used\ to\ validate\ that\ the\ input\ for\ the\ new\ article\ number\ variable\ is\ a\ four-digit\ positive\ number.\n\ @param\ inputArtikelNr\ The\ new\ article\ number\ to\ be\ validated\n\ @throws\ IllegalArgumentException\ if\ the\ article\ number\ is\ less\ than\ 1000\ or\ greater\ than\ 9999\n
comment5.params=artikelNr\ artikel
comment5.target=void\ checkIfInLager(int,\ Artikel[])
comment5.text=\n\ This\ method\ is\ used\ to\ check\ if\ the\ article\ number\ is\ already\ in\ use.\n\ @param\ artikelNr\ The\ article\ number\ to\ be\ checked\n\ @param\ artikel\ The\ array\ of\ articles\ to\ check\ the\ given\ article\ number\ against\n\ @throws\ IllegalArgumentException\ if\ the\ article\ number\ is\ already\ in\ use\n
comment6.params=artikelNr\ artikel
comment6.target=void\ checkIfNotInLager(int,\ Artikel[])
comment6.text=\n\ This\ method\ checks\ if\ a\ given\ article\ number\ is\ present\ in\ the\ given\ array\ of\ articles.\n\ @param\ artikelNr\ The\ article\ number\ to\ check\ for\ in\ the\ array\ of\ articles\n\ @param\ artikel\ The\ array\ of\ articles\ to\ check\ the\ given\ article\ number\ against\n\ @throws\ IllegalArgumentException\ if\ the\ article\ number\ is\ not\ found\ in\ the\ array\n
comment7.params=lager
comment7.target=void\ checkIfLagerIsFull(Artikel[])
comment7.text=\n\ This\ method\ is\ used\ to\ check\ if\ the\ inventory\ is\ full.\n\ @param\ lager\ The\ inventory\ to\ be\ checked\n\ @throws\ IllegalArgumentException\ if\ the\ inventory\ is\ full\n
comment8.params=lager
comment8.target=void\ checkIfLagerIsEmpty(Artikel[])
comment9.params=index\ length
comment9.target=void\ checkIfIndexIsInRange(int,\ int)
comment9.text=\n\ This\ method\ is\ used\ to\ check\ if\ the\ index\ is\ valid\n\ @param\ index\ The\ index\ to\ be\ checked\n\ @param\ length\ The\ length\ of\ the\ inventory\n\ @throws\ IllegalArgumentException\ if\ the\ index\ is\ not\ in\ the\ range\ of\ the\ inventory\n
numComments=16
